// Code generated by counterfeiter. DO NOT EDIT.
package gostructwalkerfakes

import (
	"sync"

	"github.com/DanLavine/gostructwalker"
)

type FakeWalker struct {
	FieldCallbackStub        func(*gostructwalker.StructParser)
	fieldCallbackMutex       sync.RWMutex
	fieldCallbackArgsForCall []struct {
		arg1 *gostructwalker.StructParser
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeWalker) FieldCallback(arg1 *gostructwalker.StructParser) {
	fake.fieldCallbackMutex.Lock()
	fake.fieldCallbackArgsForCall = append(fake.fieldCallbackArgsForCall, struct {
		arg1 *gostructwalker.StructParser
	}{arg1})
	stub := fake.FieldCallbackStub
	fake.recordInvocation("FieldCallback", []interface{}{arg1})
	fake.fieldCallbackMutex.Unlock()
	if stub != nil {
		fake.FieldCallbackStub(arg1)
	}
}

func (fake *FakeWalker) FieldCallbackCallCount() int {
	fake.fieldCallbackMutex.RLock()
	defer fake.fieldCallbackMutex.RUnlock()
	return len(fake.fieldCallbackArgsForCall)
}

func (fake *FakeWalker) FieldCallbackCalls(stub func(*gostructwalker.StructParser)) {
	fake.fieldCallbackMutex.Lock()
	defer fake.fieldCallbackMutex.Unlock()
	fake.FieldCallbackStub = stub
}

func (fake *FakeWalker) FieldCallbackArgsForCall(i int) *gostructwalker.StructParser {
	fake.fieldCallbackMutex.RLock()
	defer fake.fieldCallbackMutex.RUnlock()
	argsForCall := fake.fieldCallbackArgsForCall[i]
	return argsForCall.arg1
}

func (fake *FakeWalker) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.fieldCallbackMutex.RLock()
	defer fake.fieldCallbackMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeWalker) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ gostructwalker.Walker = new(FakeWalker)
